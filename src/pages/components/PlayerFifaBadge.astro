---
const { image, fullName, dorsalName, role, stats } = Astro.props
const { score, ...restOfStats } = stats ?? {}

const STATS_MAPPING = {
  speed: { name: 'Velocidad', shortName: 'VLC' },
  physique: { name: 'FÃ­sico', shortName: 'FSC' },
  shooting: { name: 'Disparo', shortName: 'DIS' },
  passing: { name: 'Pase', shortName: 'PAS' },
  talent: { name: 'Talento', shortName: 'TAL' },
  defense: { name: 'Defensa', shortName: 'DEF' },
  reflexes: { name: 'Reflejos', shortName: 'RFL' },
  saves: { name: 'Paradas', shortName: 'PAR' },
  kickoff: { name: 'Salida', shortName: 'SAL' },
  stretch: { name: 'Estirada', shortName: 'EST' },
}

const positions = {
  portero: 'POR',
  defensa: 'DEF',
  medio: 'MED',
  delantero: 'DEL',
  'jugador 11': 'J11',
}

let level = 'bronze'
if (score > 65) level = 'silver'
if (score > 75) level = 'gold'
if (role === 'jugador 11') level = 'platinum'

const levelColors = {
  platinum: 'text-[#F2F2F2]',
  bronze: 'text-[#4d331f]',
  silver: 'text-[#3b3d41]',
  gold: 'text-[#4d331f]',
}

const color = levelColors[level]
---

<script>
  // import { toSvg } from 'html-to-image'

  const handleDownload = (e) => {
    const card = e.target.parentElement
    const container = document.createElement('div')
    const button = e.target
    button.style.display = 'none'
    card.parentElement.insertBefore(container, card)
    container.appendChild(card)
    const name = card.querySelectorAll('img')[1]?.alt
    /*   toSvg(container).then((url) => {
      container.parentElement.insertBefore(card, container)
      container.remove()
      button.style.display = 'block'
      const a = document.createElement('a')
      a.href = url
      a.download = `${name} Card`
      document.body.appendChild(a)
      a.click()
      a.remove()
    }) */
  }
  const cards = document.querySelectorAll('article.card button')
  cards.forEach((card) => card.addEventListener('click', handleDownload))
</script>

<article
  class={`card ${color} w-52 text-center relative rounded-sm m-auto bg-contain bg-no-repeat aspect-[489/787] col-span-1 group`}
  style={{ backgroundImage: `url("/bg/${level}.png")` }}
>
  <button
    class="absolute right-0 top-0 p-2 bg-gray-800/70 rounded-full opacity-0 transition-all duration-500 ease-in-out group-hover:opacity-100 hover:scale-105"
    ><img
      class="w-6 h-6 pointer-events-none"
      src="/icons/download-icon.svg"
    /></button
  >
  <header class="flex pt-9">
    <div class="flex flex-col pl-6">
      {
        score ? (
          <strong class={'text-4xl font-title font-bold'}>{score}</strong>
        ) : (
          <svg
            class="w-10 block h-auto"
            height="21"
            viewBox="0 0 21 21"
            width="21"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m7.5 11.5-5 3 2-5.131-4-3.869h5l2-5 2 5h5l-4 4 2 5z"
              fill="none"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              transform="translate(3 3)"
            />
          </svg>
        )
      }
      <span class={'-mt-2 text-xl font-semibold'}
        >{positions[role.toLowerCase()]}</span
      >
    </div>
    <img
      class="-ml-12 object-cover object-top h-auto aspect-[224/152]"
      src={`/teams/players/${image}`}
      alt={`${fullName}`}
      loading="lazy"
      decoding="async"
      fetchpriority="low"
    />
  </header>

  <footer class="flex flex-col">
    <h3
      class={'py-1 font-bold text-center text-2xl uppercase after:w-4/5 after:h-[1px] after:bg-current after:m-auto after:block'}
    >
      {dorsalName}
    </h3>
    <div
      class="grid grid-cols-2 relative text-lg after:m-auto after:bg-current after:block after:w-[1px] after:h-4/5 after:absolute after:top-0 after:bottom-0 after:left-1/2"
    >
      {
        Object.entries(restOfStats).map(([key, value]) => (
          <div>
            <strong class="font-bold">{value}</strong>
            <span title={STATS_MAPPING[key].name} class="font-light">
              {STATS_MAPPING[key].shortName}
            </span>
          </div>
        ))
      }
    </div>
  </footer>
</article>
